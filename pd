import random

class Store:
    def __init__(self, name):
        self.name = name
        self.cashiers = []
        self.other_workers = []
        self.food_products = []
        self.drink_products = []
        self.other_products = []

    def add_cashier(self, cashier):
        self.cashiers.append(cashier)

    def add_other_worker(self, other_worker):
        self.other_workers.append(other_worker)

    def add_food_product(self, food_product):
        self.food_products.append(food_product)

    def add_drink_product(self, drink_product):
        self.drink_products.append(drink_product)
        
    def add_other_product(self, other_product):
        self.other_products.append(other_product)

    def get_cashiers(self):
        return self.cashiers

    def get_other_workers(self):
        return self.other_workers

    def get_food_products(self):
        return self.food_products

    def get_drink_products(self):
        return self.drink_products
    
    def get_other_products(self):
        return self.other_products
    
class Worker:
    def __init__(self, name, id, salary):
        self.name = name
        self.id = id
        self.salary = salary

    def get_name(self):
        return self.name

    def get_id(self):
        return self.id
    
    def get_salary(self):
        return self.salary
    
class Cashier(Worker):
    def __init__(self, name, id, salary):
        super().__init__(name, id, salary)

    def checkout(self, cart):
        total_price = cart.calculate_total_price()
        print(f"Total price: {total_price}")
        return total_price

class OtherWorker(Worker):
    def __init__(self, name, id, salary):
        super().__init__(name, id, salary)

    def restock(self, product):
        print(f"{self.name} is restocking {product.get_name()}.")

class Product:
    def __init__(self, name, price):
        self.name = name
        self.price = price

    def get_name(self):
        return self.name

    def get_price(self):
        return self.price
    
class Food(Product):
    def __init__(self, name, price):
        super().__init__(name, price)

class Drink(Product):
    def __init__(self, name, price):
        super().__init__(name, price)
        
class OtherProduct(Product):
    def __init__(self, name, price):
        super().__init__(name, price)

class Buyer:
    def __init__(self, name, money):
        self.name = name
        self.money = money
        
    def get_name(self):
        return self.name
    
    def get_money(self):
        return self.money
    
class ShoppingCart:
    def __init__(self, buyer):
        self.buyer = buyer
        self.products = []
        
    def add_product(self, product):
        self.products.append(product)
        
    def remove_product(self, product):
        if product in self.products:
            self.products.remove(product)
        else:
            print("Product not in cart.")
        
    def calculate_total_price(self):
        total_price = 0
        for product in self.products:
            total_price += product.get_price()
        return total_price

store = Store("Supermarket")

cashier1 = Cashier("Alice", 1, 2000)
cashier2 = Cashier("Bob", 2, 2500)

other_worker1 = OtherWorker("Charlie", 3, 1800)
other_worker2 = OtherWorker("David", 4, 2200
